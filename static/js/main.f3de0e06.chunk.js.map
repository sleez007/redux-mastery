{"version":3,"sources":["containers/messageInput/messageInput.module.css","serviceWorker.js","data/static-data.js","constants/action-types.js","reducers/index.js","reducers/contacts.js","reducers/user.js","reducers/activeUserId.js","reducers/messages.js","reducers/typing.js","store/index.js","containers/user/user.js","actions/index.js","components/sidebar/sidebar.js","components/empty/empty.js","components/header/header.js","containers/chat/chat.js","containers/messageInput/messageInput.js","containers/chatWindow/chatWindow.js","components/main/main.js","containers/app/App.js","index.js","components/sidebar/sidebar.module.css","components/main/main.module.css","containers/chatWindow/chatWindow.module.css","components/empty/empty.module.css","containers/user/user.module.css","components/header/header.module.css","containers/chat/chat.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","numberOfUsers","shortid","require","txtgen","faker","_","users","Array","from","length","generateUser","contacts","mapKeys","getMessages","messagesPerUser","messages","forEach","user","numberOfMsgs","user_id","v","i","number","text","sentence","is_user_msg","random","boolean","name","findName","email","internet","profile_pic","avatar","status","generate","combineReducers","state","activeUserId","action","type","payload","message","userId","allUserMsgs","keys","pop","typing","store","createStore","reducer","handleUserClick","console","log","dispatch","className","styles","User","onClick","bind","src","alt","User__pic","User__details","User__details_name","User__details_status","Sidebar","map","contact","key","first_name","split","Empty","Empty__name","Empty__img","Empty__status","Empty__btn","Empty__info","Header","Header__name","Header__status","Chat","Chats","props","scrollToBottom","chatsRef","current","scrollTop","scrollHeight","React","createRef","ref","this","Component","MessageInput","value","getState","Message","onSubmit","e","preventDefault","Message__input","onChange","setTypingValue","target","placeholder","ChatWindow","activeUser","activeMsgs","values","Main","App","render","ReactDOM","StrictMode","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.f3de0e06.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"messageInput_Message__fCCBR\",\"Message__input\":\"messageInput_Message__input__1v8w4\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const shortid = require(\"shortid\"); // shortid.generate() returns a unique \"short\" id\nconst txtgen = require(\"txtgen\"); // txtgen.sentence() returns random \"readable\" sentences\nconst faker = require(\"faker\"); // faker is used for generating random fake data.\nconst _ = require(\"lodash\"); // lodash is a utility lib for Javascript\n\nconst users = generateUsers(10);\nexport const contacts = _.mapKeys(users, \"user_id\");\nexport const getMessages = messagesPerUser => {\n  let messages = {};\n  _.forEach(users, user => {\n    messages[user.user_id] = {\n      ..._.mapKeys(generateMsgs(messagesPerUser), \"number\")\n    };\n  });\n  return messages;\n};\n\n// just an example of how the state object is structured\nexport const state = {\n  user: generateUser(),\n  messages: getMessages(10),\n  typing: \"\",\n  contacts,\n  activeUserId: null\n};\n\n/**\n * @returns {Object} - a new user object\n */\nexport function generateUser() {\n  return {\n    name: faker.name.findName(),\n    email: faker.internet.email(),\n    profile_pic: faker.internet.avatar(),\n    status: txtgen.sentence(),\n    user_id: shortid.generate()\n  };\n}\n/**\n * @returns {Object} - a new message object\n */\nfunction generateMsg(number) {\n  return {\n    number,\n    text: txtgen.sentence(),\n    is_user_msg: faker.random.boolean()\n  };\n}\n/**\n *\n * @param {Number} numberOfUsers - the number of users to be generated\n * @param {Function} generateUser - function that generates a single user\n * @returns {Array} - an array of user objects with length n = numberOfUsers\n */\nfunction generateUsers(numberOfUsers) {\n  return Array.from({ length: numberOfUsers }, () => generateUser());\n}\n\nfunction generateMsgs(numberOfMsgs) {\n  return Array.from({ length: numberOfMsgs }, (v, i) => generateMsg(i));\n}","export const SET_ACTIVE_USER_ID = \"SET_ACTIVE_USER_ID\"; \nexport const SET_TYPING_VALUE = \"SET_TYPING_VALUE\";\nexport const SEND_MESSAGE = \"SEND_MESSAGE\";","import { combineReducers } from 'redux';\n\nimport contacts from './contacts';\nimport user from './user';\nimport activeUserId from './activeUserId';\nimport messages from './messages';\nimport typing from './typing';\n\nexport default combineReducers({\n    contacts,\n    user,\n    activeUserId,\n    messages,\n    typing\n})","import { contacts} from '../data/static-data';\n\nexport default (state= contacts, action) => {\n    // switch(action){\n\n    // }\n\n    return state;\n}","import { generateUser } from \"../data/static-data\";\nexport default function user(state = generateUser(), action) {\n  return state;\n}","import { SET_ACTIVE_USER_ID } from \"../constants/action-types\";\n\nexport default (state = null, action)=>{\n    switch(action.type){\n        case SET_ACTIVE_USER_ID:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import _ from 'lodash';\nimport { SEND_MESSAGE } from '../constants/action-types';\nimport { getMessages } from '../data/static-data';\n\nexport default (state = getMessages(10) , action)=>{\n    switch(action.type){\n        case SEND_MESSAGE:\n        const { message, userId } = action.payload;\n        const allUserMsgs = state[userId];\n        const number = +_.keys(allUserMsgs).pop() + 1;\n  \n        return {\n          ...state,\n          [userId]: {\n            ...allUserMsgs,\n            [number]: {\n              number,\n              text: message,\n              is_user_msg: true\n            }\n          }\n        }; \n        default:\n            return state;\n    }\n}","import { SET_TYPING_VALUE, SEND_MESSAGE } from \"../constants/action-types\";\nexport default (state =\"\", action) =>{\n    switch(action.type){\n        case SET_TYPING_VALUE:\n            return action.payload;\n        case SEND_MESSAGE:\n            return '';\n        default:\n            return state;\n    }\n}","import { createStore } from 'redux';\n\nimport reducer from '../reducers';\n//import { contacts} from '../data/static-data';\n\n// const store = createStore(reducer, {contacts});\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport styles from './user.module.css';\nimport store from '../../store';\n\nimport { setActiveUserId } from '../../actions';\n\nconst user = ({user})=>{\n    const { name, profile_pic, status } = user;\n    \n    return(\n      <div className={styles.User} onClick={handleUserClick.bind(null, user)}>\n        <img src={profile_pic} alt={name} className={styles.User__pic} />\n        <div className={styles.User__details}>\n          <p className={styles.User__details_name}>{name}</p>\n          <p className={styles.User__details_status}>{status}</p>\n        </div>\n      </div>\n    );\n}\n\nfunction handleUserClick({ user_id }) {\n  console.log(user_id)\n  store.dispatch(setActiveUserId(user_id));\n} \n\nexport default user;","import { SET_ACTIVE_USER_ID, SET_TYPING_VALUE, SEND_MESSAGE} from \"../constants/action-types\";\n\nexport const setActiveUserId = id => ({\n  type: SET_ACTIVE_USER_ID,\n  payload: id\n});\n\nexport const setTypingValue = value => ({\n    type: SET_TYPING_VALUE,\n    payload: value\n});\n\nexport const sendMessage = (message, userId) => ({\n    type: SEND_MESSAGE,\n    payload: {\n      message,\n      userId\n    }\n});\n","import React from 'react';\nimport styles from './sidebar.module.css';\n\nimport User from '../../containers/user/user';\n\nconst Sidebar = ({contacts})=>{\n    return <aside className={styles.Sidebar}>\n        {contacts.map(contact=><User user={contact} key={contact.user_id} />)}\n    </aside>;\n}\n\nexport default Sidebar;","import React from 'react';\nimport styles from './empty.module.css';\n\nexport default ({user})=>{\n    const { name, profile_pic, status } = user;\n    const first_name = name.split(\" \")[0];\n    return (\n        <div className={styles.Empty}>\n            <h1 className={styles.Empty__name}>Welcome, {first_name} </h1>\n            <img src={profile_pic} alt={name} className={styles.Empty__img} />\n            <p className={styles.Empty__status}>\n                <b>Status:</b> {status}\n            </p>\n            <button className={styles.Empty__btn}>Start a conversation</button>\n            <p className={styles.Empty__info}>\n                Search for someone to start chatting with or go to Contacts to see who\n                is available\n            </p>\n        </div>\n    )\n}","import React from \"react\";\nimport styles from './header.module.css';\n\nconst Header= ({ user }) => {\n    const { name, status } = user;\n    return (\n      <header className={styles.Header}>\n        <h1 className={styles.Header__name}>{name}</h1>\n        <p className={styles.Header__status}>{status}</p>\n      </header>\n    );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport styles from  \"./chat.module.css\";\n\nconst Chat = ({ message }) => {\n  const { text, is_user_msg } = message;\n  return (\n    <span className={`${styles.Chat} ${is_user_msg ? styles['is-user-msg'] : \"\"}`}>{text}</span>\n  );\n};\n\nclass Chats extends Component {\n    constructor(props){\n        super(props);\n        this.chatsRef = React.createRef();\n    }\n  render() {\n    return (\n      <div className={styles.Chats} ref={this.chatsRef}>\n        {this.props.messages.map(message => (\n          <Chat message={message} key={message.number} />\n        ))}\n      </div>\n    );\n  }\n\n  scrollToBottom = () => {\n    this.chatsRef.current.scrollTop = this.chatsRef.current.scrollHeight;\n  };\n\n  componentDidMount() {\n    this.scrollToBottom();\n  }\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n}\n\nexport default Chats;","import React from \"react\";\nimport store from \"../../store\";\nimport { setTypingValue } from \"../../actions\";\nimport styles from  \"./messageInput.module.css\";\nimport { sendMessage } from '../../actions';\n\nconst MessageInput = ({ value }) => {\n\n  const handleChange = e => {\n    store.dispatch(setTypingValue(e.target.value));\n  };\n\n  const state = store.getState();  \n  const handleSubmit = e => {\n    e.preventDefault();\n    const { typing, activeUserId } = state;\n    store.dispatch(sendMessage(typing, activeUserId));\n  };\n\n  return (\n    <form className={styles.Message} onSubmit={handleSubmit}>\n      <input\n        className={styles.Message__input}\n        onChange={handleChange}\n        value={value}\n        placeholder=\"write a message\"\n      />\n    </form>\n  );\n};\n\nexport default MessageInput;","import React from \"react\";\nimport _ from 'lodash';\n\nimport store from '../../store'\nimport Header from '../../components/header/header';\nimport Chat from '../chat/chat';\nimport styles from './chatWindow.module.css';\nimport MessageInput from \"../messageInput/messageInput\";\n\nconst ChatWindow = ({ activeUserId }) => {\n    const state = store.getState();\n    const { typing } = state;\n    const activeUser = state.contacts[activeUserId];\n    const activeMsgs = state.messages[activeUserId];\n  return (\n    <div className={styles.ChatWindow}>\n        <Header user={activeUser}/>\n        <Chat messages={_.values(activeMsgs)} />\n        <MessageInput  value={typing}/>\n    </div>\n  );\n};\n\nexport default ChatWindow; ","import React from \"react\";\nimport styles from \"./main.module.css\";\nimport Empty from '../empty/empty';\nimport ChatWindow from '../../containers/chatWindow/chatWindow';\n\nconst Main = ({user,activeUserId}) => {\n  const renderMainContent = () => {\n    if (!activeUserId) {\n      return <Empty user={user} activeUserId={activeUserId} />;\n    } else {\n      return <ChatWindow activeUserId={activeUserId} />;\n    }\n  };\nreturn <main className={styles.Main}>{renderMainContent()}</main>;\n};\n\nexport default Main;","import React from 'react';\nimport _ from 'lodash';\n\nimport './App.css';\nimport store from '../../store';\n\n\nimport Sidebar from '../../components/sidebar/sidebar';\nimport Main from '../../components/main/main';\n\n\nfunction App() {\n  const { contacts, user,activeUserId } = store.getState();\n  return (\n    <div className=\"App\">\n      <Sidebar contacts={ _.values(contacts)} />\n      <Main user={user} activeUserId={activeUserId} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './containers/app/App';\nimport store from './store';\n\nfunction fancyLog() {\n  console.log(\"%c Rendered with 👉 👉👇\", \"background: purple; color: #FFF\");\n  console.log(store.getState());\n}\n\nconst render = ()=>{\n  fancyLog();\n  return ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n}\nrender();\nstore.subscribe(render);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"sidebar_Sidebar__1Qz_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"main_Main__30wLU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ChatWindow\":\"chatWindow_ChatWindow__2SwA9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Empty\":\"empty_Empty__4bW5z\",\"Empty__name\":\"empty_Empty__name__1P6Wa\",\"Empty__status\":\"empty_Empty__status__I_Z_D\",\"Empty__info\":\"empty_Empty__info__1eBKb\",\"Empty__img\":\"empty_Empty__img__1SmQb\",\"Empty__btn\":\"empty_Empty__btn__3GLce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"user_User__13HCg\",\"User__pic\":\"user_User__pic__10jVh\",\"User__details\":\"user_User__details__1oKJi\",\"User__details_name\":\"user_User__details_name__3GQEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"header_Header__2o08c\",\"Header__name\":\"header_Header__name__2oRCG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Chats\":\"chat_Chats__3anVT\",\"Chat\":\"chat_Chat__1d_Zy\",\"is-user-msg\":\"chat_is-user-msg__2BumV\"};"],"sourceRoot":""}